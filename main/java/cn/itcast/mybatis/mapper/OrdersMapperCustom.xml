<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace命名空间，作用就是对sql进行分类化管理，理解sql隔离
注意：使用mapper代理方法开发，namespace有特殊重要的作用
-->
<mapper namespace="cn.itcast.mybatis.mapper.OrdersMapperCustom">

    <!--
        查询订单关联查询用户,使用resultmap
        将整个查询结果映射到cn.itcast.mybatis.po.Orders中
        使用继承，不在该出配置重复信息
    -->
   <resultMap id="OrdersUserResultMap" type="cn.itcast.mybatis.po.Orders">
        <!--配置映射的订单信息
            订单  pojo列信息 实际数据库中信息
            column写入查询语句中的 列名，
            propert写入pojo中的列名
        -->
       <!--订单信息-->
        <id column="id" property="id" />
       <result column="user_id" property="userId" />
       <result column="number" property="number" />
       <result column="createtime" property="createtime" />
       <result column="note" property="note" />

       <!--配置映射的用户信息
           association: 用于映射关联查询单个对象的信息

       -->
       <!--用户信息-->
        <association property="user" javaType="cn.itcast.mybatis.po.User" >
            <id column="user_id" property="id" />
            <result column="username" property="username" />
            <result column="sex" property="sex" />
            <result column="address" property="address" />
        </association>

   </resultMap>

    <!--查询订单关联查询用户及订单明细的resultmap-->
    <resultMap id="OrdersAndOrderDetailResultMap" type="cn.itcast.mybatis.po.Orders"  extends="OrdersUserResultMap"  >

        <!--明细信息
            一个订单查询多条明细
            一对多的关系
            collection属性
        -->
        <collection property="orderdetails" ofType="cn.itcast.mybatis.po.Orderdetail" >
            <id column="orderdetail_id" property="id" />
            <result column="items_id" property="itemsId" />
            <result column="items_num" property="itemsNum" />
            <result column="orders_id" property="ordersId" />

        </collection>
    </resultMap>


    <!--查询用户及购买的商品信息-->
    <resultMap id="UserAndItemsResultMap" type="cn.itcast.mybatis.po.User">

        <!--用户信息-->
        <id column="user_id" property="id" />
        <result column="username" property="username" />
        <result column="sex" property="sex" />
        <result column="address" property="address" />

        <!--订单信息-->
        <collection property="ordersList" ofType="cn.itcast.mybatis.po.Orders">
            <id column="id" property="id" />
            <result column="user_id" property="userId" />
            <result column="number" property="number" />
            <result column="createtime" property="createtime" />
            <result column="note" property="note" />


            <!--订单明细-->
            <collection property="orderdetails" ofType="cn.itcast.mybatis.po.Orderdetail" >
                <id column="orderdetail_id" property="id" />
                <result column="items_id" property="itemsId" />
                <result column="items_num" property="itemsNum" />
                <result column="orders_id" property="ordersId" />

                <!--商品信息-->
                <association property="items" javaType="cn.itcast.mybatis.po.Items">
                    <id column="items_id" property="id" />
                    <result column="items_name" property="name" />
                    <result column="items_detail" property="detail" />
                    <result column="items_price" property="price" />
                </association>
            </collection>
        </collection>

    </resultMap>



    <!--查询订单关联查询用户-->
    <select id="findOrdersUser" resultType="cn.itcast.mybatis.po.OrdersCustom">
        SELECT
		orders.*,
		USER.username,
		USER.sex,
		USER.address
		FROM
		orders,
		USER
		WHERE orders.user_id = user.id
    </select>

    <!--查询订单关联查询用户,使用resultmap-->
    <select id="findOrdersUserResultMap" resultMap="OrdersUserResultMap">
        SELECT
        orders.*,
        USER.username,
        USER.sex,
        USER.address
        FROM
        orders,
        USER
        WHERE orders.user_id = user.id
    </select>

    <!--查询订单关联查询用户及订单明细,使用resultmap-->
    <select id="findOrdersAndOrderDetailResultMap" resultMap="OrdersAndOrderDetailResultMap">
        SELECT orders.*,
            user.username,
            user.sex,
            user.address,
            orderdetail.id orderdetail_id,
            orderdetail.items_id,
            orderdetail.items_num,
            orderdetail.orders_id
        FROM
            orders,
            user,
            orderdetail
        WHERE orders.id=orderdetail.orders_id AND orders.user_id=user.id
    </select>

    <!--查询用户及购买的商品信息-->
    <select id="findUserAndItems" resultMap="UserAndItemsResultMap">
        SELECT orders.*,
          user.username,
          user.sex,
          user.address,
          orderdetail.id orderdetail_id,
          orderdetail.items_id,
          orderdetail.items_num,
          orderdetail.orders_id,
          items.name items_name,
          items.detail items_detail,
          items.price items_price
        FROM
          orders,
          user,
          orderdetail,
          items
        WHERE orders.id=orderdetail.orders_id AND orders.user_id=user.id AND orderdetail.items_id=items.id

    </select>


    <!--配置延迟加载的map
        先去执行findOrdersUserLazyLoading，当需要去查询用户的时候再去执行findByUserId

    -->
    <resultMap id="OrdersUserLazyLoadingResultMap" type="cn.itcast.mybatis.po.Orders" >
        <!--对订单消息进行映射-->
        <id column="id" property="id" />
        <result column="user_id" property="userId" />
        <result column="number" property="number" />
        <result column="createtime" property="createtime" />
        <result column="note" property="note" />
        <!--用户信息-->
        <association property="user" javaType="cn.itcast.mybatis.po.User"
                     select="cn.itcast.mybatis.mapper.UserMapper.findByUserId" column="user_id ">

            <!--实现用户的延迟加载
                select 指定延迟加载需要执行的sql（statement）的id

                select:要延迟加载的statement的id
                colunm：关联两张表的那个列的列名

            -->

        </association>

    </resultMap>
    <select id="findOrdersUserLazyLoading" resultMap="OrdersUserLazyLoadingResultMap">
        SELECT * FROM orders;
    </select>

</mapper>